// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  uuid     String   @unique @default(uuid())
  name     String
  email    String   @unique
  password String
  pedidos  Pedido[]
  isAdmin  Boolean  @default(false)

  cpf         String? @unique
  telefone    String?
  pais        String?
  estado      String?
  cidade      String?
  bairro      String?
  cep         String?
  rua         String?
  numero      String?
  complemento String?
  imagem      String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Pedido {
  id        Int             @id @default(autoincrement())
  uuid      String          @unique @default(uuid())
  usuarioId Int
  usuario   User            @relation(fields: [usuarioId], references: [id])
  total     Float
  status    String          @default("pendente") // Novo campo para o status do pedido
  produtos  ProdutosItens[]
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model Produto {
  id            Int             @id @default(autoincrement())
  uuid          String          @unique @default(uuid())
  titulo        String
  descricao     String
  preco         Float
  quantidade    Int
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  ProdutosItens ProdutosItens[]
}

model ProdutosItens {
  id            Int     @id @default(autoincrement())
  pedidoId      Int
  produtoId     Int
  titulo        String
  quantidade    Int
  precoUnitario Float   @default(0.0) // Define um valor padr√£o
  pedido        Pedido  @relation(fields: [pedidoId], references: [id])
  produto       Produto @relation(fields: [produtoId], references: [id])
}
